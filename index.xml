<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Suneet Agrawal</title>
    <link>https://agrawalsuneet.github.io/</link>
    <description>Recent content on Suneet Agrawal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Dec 2019 09:51:51 -0400</lastBuildDate>
    
	<atom:link href="https://agrawalsuneet.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>lateinit property in Kotlin</title>
      <link>https://agrawalsuneet.github.io/blogs/lateinit-property-in-kotlin/</link>
      <pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://agrawalsuneet.github.io/blogs/lateinit-property-in-kotlin/</guid>
      <description>There can be two ways to declare and initialize a var property. The first property type is initialized while declaration itself and doesn’t require a null check (!!) while using it.</description>
    </item>
    
    <item>
      <title>Property, Getter and Setter — Kotlin</title>
      <link>https://agrawalsuneet.github.io/blogs/property-getter-and-setter-kotlin/</link>
      <pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://agrawalsuneet.github.io/blogs/property-getter-and-setter-kotlin/</guid>
      <description>I started developing Android apps in Java where encapsulation of object-oriented programming was achieved through declaring variables as private fields with their getter and setter as public methods. The moment I converted my Java code to Kotlin, it replaced each variable along with its getter and setter with just a single line of code. Although I was amazed at how can a single line of code replace the complete variable with the same functionality, but later on understanding it, I started liking writing the code in Kotlin.</description>
    </item>
    
    <item>
      <title>Publications</title>
      <link>https://agrawalsuneet.github.io/publications/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://agrawalsuneet.github.io/publications/</guid>
      <description>Technical Blogs (9 posts)   How extension functions resolved?   how does extension functions are actually resolved? This question is being asked by almost everyone both in and outside the interviews. The shorted or the only answer I get is &amp;#39;Statically&amp;#39;. What does statically means? read more   15 Dec 2019     Inheritance vs Extension functions   We all know about inheritance which is there in the OOPs concept where one can extend a class and add functionality to it.</description>
    </item>
    
    <item>
      <title>Safe calls(?.) vs Null checks(!!) in Kotlin</title>
      <link>https://agrawalsuneet.github.io/blogs/safe-calls-vs-null-checks-in-kotlin/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://agrawalsuneet.github.io/blogs/safe-calls-vs-null-checks-in-kotlin/</guid>
      <description>In Kotlin, the type system distinguishes between references that can hold null (nullable references) and those that can not (non-null references). For example, a normal property can’t hold a null value and will show a compile error.</description>
    </item>
    
    <item>
      <title>Equality in Kotlin (‘==’, ‘===’ and ‘equals’)</title>
      <link>https://agrawalsuneet.github.io/blogs/equality-in-kotlin/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://agrawalsuneet.github.io/blogs/equality-in-kotlin/</guid>
      <description>We often need to compare the data of two variables or objects or the references of two objects in Kotlin. This brings in another question, which equality check should we use in which case.</description>
    </item>
    
    <item>
      <title>Companion object in Kotlin</title>
      <link>https://agrawalsuneet.github.io/blogs/companion-object-in-kotlin/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://agrawalsuneet.github.io/blogs/companion-object-in-kotlin/</guid>
      <description>Unlike Java or C#, Kotlin doesn’t have static members or member functions. Kotlin recommends to simply use package-level functions instead. If you need to write a function that can be called without having a class instance but needs access to the internals of a class, you can write it as a member of a companion object declaration inside that class.</description>
    </item>
    
    <item>
      <title>Backing Field in Kotlin</title>
      <link>https://agrawalsuneet.github.io/blogs/backing-field-in-kotlin/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://agrawalsuneet.github.io/blogs/backing-field-in-kotlin/</guid>
      <description>Backing field is an autogenerated field for any property which can only be used inside the accessors(getter or setter) and will be present only if it uses the default implementation of at least one of the accessors, or if a custom accessor references it through the field identifier.</description>
    </item>
    
    <item>
      <title>Native Android in Unity</title>
      <link>https://agrawalsuneet.github.io/blogs/native-android-in-unity/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://agrawalsuneet.github.io/blogs/native-android-in-unity/</guid>
      <description>While developing unity games in C# targeting android platform, we always want to use few native android features in our game. These features can be showing notifications on certain actions in the game or can be sharing the high score with other players and inviting them to try our game using android native share.</description>
    </item>
    
    <item>
      <title>How extension functions resolved?</title>
      <link>https://agrawalsuneet.github.io/blogs/how-extension-functions-resolved/</link>
      <pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://agrawalsuneet.github.io/blogs/how-extension-functions-resolved/</guid>
      <description>how does extension functions are actually resolved? This question is being asked by almost everyone both in and outside the interviews. The shorted or the only answer I get is &amp;lsquo;Statically&amp;rsquo;. What does statically means?</description>
    </item>
    
    <item>
      <title>Inheritance vs Extension functions</title>
      <link>https://agrawalsuneet.github.io/blogs/inheritance-vs-extension-functions/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://agrawalsuneet.github.io/blogs/inheritance-vs-extension-functions/</guid>
      <description>We all know about inheritance which is there in the OOPs concept where one can extend a class and add functionality to it. In the new programming languages, there is something called as extension functions which can add a functionality to an existing class without extending it.</description>
    </item>
    
    <item>
      <title>Native Android in Unity</title>
      <link>https://agrawalsuneet.github.io/gists/native-android-in-unity/</link>
      <pubDate>Thu, 14 Nov 2019 09:51:51 -0400</pubDate>
      
      <guid>https://agrawalsuneet.github.io/gists/native-android-in-unity/</guid>
      <description>An example of implementing Android native code in Unity.</description>
    </item>
    
    <item>
      <title>Native Android text sharing in Unity</title>
      <link>https://agrawalsuneet.github.io/gists/native-android-text-sharing-in-unity/</link>
      <pubDate>Wed, 13 Nov 2019 09:51:51 -0400</pubDate>
      
      <guid>https://agrawalsuneet.github.io/gists/native-android-text-sharing-in-unity/</guid>
      <description>An example of implementing native Android text sharing in Unity.</description>
    </item>
    
    <item>
      <title>Native Android text sharing to particular app in Unity</title>
      <link>https://agrawalsuneet.github.io/gists/native-android-text-sharing-to-particular-app-in-unity/</link>
      <pubDate>Tue, 12 Nov 2019 09:51:51 -0400</pubDate>
      
      <guid>https://agrawalsuneet.github.io/gists/native-android-text-sharing-to-particular-app-in-unity/</guid>
      <description>An example of implementing native Android text sharing to a particular app using app&amp;rsquo;s package name in Unity.</description>
    </item>
    
    <item>
      <title>Native Android image sharing in Unity</title>
      <link>https://agrawalsuneet.github.io/gists/native-android-image-sharing-in-unity/</link>
      <pubDate>Mon, 11 Nov 2019 09:51:51 -0400</pubDate>
      
      <guid>https://agrawalsuneet.github.io/gists/native-android-image-sharing-in-unity/</guid>
      <description>An example of implementing native Android image/screenshot sharing in Unity.</description>
    </item>
    
    <item>
      <title>Native Android image sharing using FileProvider in Unity</title>
      <link>https://agrawalsuneet.github.io/gists/native-android-image-sharing-using-fileprovider-in-unity/</link>
      <pubDate>Sun, 10 Nov 2019 09:51:51 -0400</pubDate>
      
      <guid>https://agrawalsuneet.github.io/gists/native-android-image-sharing-using-fileprovider-in-unity/</guid>
      <description>An example of implementing native Android image/screenshot sharing using FileProvider in Unity.</description>
    </item>
    
    <item>
      <title>Public Appearances</title>
      <link>https://agrawalsuneet.github.io/publicappearances/</link>
      <pubDate>Sat, 24 Aug 2019 09:51:51 -0400</pubDate>
      
      <guid>https://agrawalsuneet.github.io/publicappearances/</guid>
      <description>Past   img { width:100% } @media screen and (min-width: 768px) { img { width:60% } }    Speaker at GDG Devfest Kolkata  Kolkata, India - 4 Aug 2019
  Do APK or app size matters? Does a user think about the APK size before downloading it? What if we provide very basic functionality and let the user decide whether he wants the advanced or additional functionality or not?</description>
    </item>
    
    <item>
      <title>Open Source Contribution</title>
      <link>https://agrawalsuneet.github.io/opensourcecontribution/</link>
      <pubDate>Sat, 17 Aug 2019 09:51:51 -0400</pubDate>
      
      <guid>https://agrawalsuneet.github.io/opensourcecontribution/</guid>
      <description>Contribution to public repositories   img { width:100% } @media screen and (min-width: 768px) { img { width:60% } }    CameraView  CameraView is a well documented, high-level library that makes capturing pictures and videos easy, addressing most of the common issues and needs, and still leaving you with flexibility where needed.
  My contribution to this public repository was the implementation of live filters using fragment and vertex shaders on the previewing and capturing of camera feed on openGL surface view.</description>
    </item>
    
    <item>
      <title>Personal Games &amp; Apps</title>
      <link>https://agrawalsuneet.github.io/personalgamesandapps/</link>
      <pubDate>Sat, 17 Aug 2019 09:51:51 -0400</pubDate>
      
      <guid>https://agrawalsuneet.github.io/personalgamesandapps/</guid>
      <description>Unity Games   img { width:100% } @media screen and (min-width: 768px) { img { width:60% } }    Fire Block  Shoot the blocks and make your way
  Escape between the blocks by making a safe passage to stay alive or shoot them all to increase your score if you really can.  &amp;#39;Fire Block&amp;#39; is a simple arcade game where the player can be controlled with a single finger movement on the screen.</description>
    </item>
    
  </channel>
</rss>